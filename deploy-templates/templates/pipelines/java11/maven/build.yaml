apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: maven-java11-build
  labels:
    {{- include "edp-tekton.labels" . | nindent 4 }}
spec:
  workspaces:
    - name: shared-workspace
    - name: maven-settings
    - name: ssh-creds
  params:
    - name: git-source-url
      default: "https://github.com/sergk/spring-petclinic"
      description: git url to clone
      type: string
    - name: git-source-revision
      description: 'git revision to checkout (branch, tag, sha, refâ€¦)'
      default: "edp"
      type: string
    - name: SONAR_URL
      default: 'http://sonar.{{ .Release.Namespace }}:9000'
      description: SonarQube url for static code analysis
      type: string
    - name: NEXUS_URL
      default: 'http://nexus.{{ .Release.Namespace }}:8081'
      description: Nexus url
      type: string
    - name: CODEBASE_NAME
      default: 'java11-maven'
      description: "Project name"
      type: string
    - name: maven-image-version
      default: 'maven:3.8.6-openjdk-11'
      description: "maven image version"
      type: string
  tasks:
    - name: fetch-repository
      taskRef:
        name: git-clone
      params:
        - name: url
          value: $(params.git-source-url)
        - name: revision
          value: $(params.git-source-revision)
      workspaces:
        - name: output
          workspace: shared-workspace
        - name: ssh-directory
          workspace: ssh-creds

    - name: init-values
      taskRef:
        name: init-values
      runAfter:
        - fetch-repository
      params:
        - name: CODEBASE_NAME
          value: $(params.CODEBASE_NAME)
        - name: BRANCH_NAME
          value: $(params.git-source-revision)

    - name: getedp-version
      when:
        - input: $(tasks.init-values.results.VERSIONING_TYPE)
          operator: in
          values:
            - edp
      taskRef:
        name: getedp-version
      runAfter:
        - init-values
      params:
        - name: CODEBASEBRANCH_NAME
          value: $(tasks.init-values.results.CODEBASEBRANCH_NAME)

    - name: sast
      taskRef:
        name: sast
      runAfter:
        - fetch-repository
      params:
        - name: reportDataProductName
          value: $(tasks.init-values.results.TENANT_NAME)
        - name: reportDataEngagementName
          value: $(tasks.init-values.results.CODEBASEBRANCH_NAME)
      workspaces:
        - name: source
          workspace: shared-workspace

    - name: compile
      taskRef:
        name: maven
      runAfter:
        - getedp-version
      params:
        - name: MAVEN_IMAGE
          value: $(params.maven-image-version)
        - name: GOALS
          value:
            - -B
            - '-Dartifactory.baseUrl=$(params.NEXUS_URL)'
            - '-Dartifactory.releasePath=edp-maven-releases'
            - '-Dartifactory.snapshotsPath=edp-maven-snapshots'
            - '-Dartifactory.groupPath=edp-maven-group'
            - compile
      workspaces:
        - name: maven-settings
          workspace: maven-settings
        - name: source
          workspace: shared-workspace

    - name: test
      taskRef:
        name: maven
      runAfter:
        - compile
      params:
        - name: MAVEN_IMAGE
          value: $(params.maven-image-version)
        - name: GOALS
          value:
            - -B
            - '-Dartifactory.baseUrl=$(params.NEXUS_URL)'
            - '-Dartifactory.releasePath=edp-maven-releases'
            - '-Dartifactory.snapshotsPath=edp-maven-snapshots'
            - '-Dartifactory.groupPath=edp-maven-group'
            - org.jacoco:jacoco-maven-plugin:prepare-agent
            - '-Dmaven.test.failure.ignore=true'
            - verify
            - org.jacoco:jacoco-maven-plugin:report
      workspaces:
        - name: maven-settings
          workspace: maven-settings
        - name: source
          workspace: shared-workspace

    - name: sonar
      taskRef:
        name: maven
      runAfter:
        - test
      params:
        - name: MAVEN_IMAGE
          value: $(params.maven-image-version)
        - name: GOALS
          value:
            - -B
            - '-Dartifactory.baseUrl=$(params.NEXUS_URL)'
            - '-Dartifactory.releasePath=edp-maven-releases'
            - '-Dartifactory.snapshotsPath=edp-maven-snapshots'
            - '-Dartifactory.groupPath=edp-maven-group'
            - '-Dsonar.projectKey=$(tasks.init-values.results.CODEBASEBRANCH_NAME)'
            - '-Dsonar.projectName=$(tasks.init-values.results.CODEBASEBRANCH_NAME)'
            - '-Dsonar.qualitygate.wait=true'
            - '-Dsonar.host.url=$(params.SONAR_URL)'
            - verify
            - sonar:sonar
      workspaces:
        - name: maven-settings
          workspace: maven-settings
        - name: source
          workspace: shared-workspace

    - name: build
      taskRef:
        name: maven
      runAfter:
        - sonar
      params:
        - name: MAVEN_IMAGE
          value: $(params.maven-image-version)
        - name: GOALS
          value:
            - -B
            - '-Dartifactory.baseUrl=$(params.NEXUS_URL)'
            - '-Dartifactory.releasePath=edp-maven-releases'
            - '-Dartifactory.snapshotsPath=edp-maven-snapshots'
            - '-Dartifactory.groupPath=edp-maven-group'
            - clean
            - package
            - '-DskipTests=true'
      workspaces:
        - name: maven-settings
          workspace: maven-settings
        - name: source
          workspace: shared-workspace

    - name: push
      taskRef:
        name: maven
      runAfter:
        - build
      params:
        - name: MAVEN_IMAGE
          value: $(params.maven-image-version)
        - name: GOALS
          value:
            - -B
            - '-Dartifactory.baseUrl=$(params.NEXUS_URL)'
            - '-Dartifactory.releasePath=edp-maven-releases'
            - '-Dartifactory.snapshotsPath=edp-maven-snapshots'
            - '-Dartifactory.groupPath=edp-maven-group'
            - deploy
            - '-DskipTests=true'
            - '-DaltDeploymentRepository=nexus::default::$(params.NEXUS_URL)/repository/edp-maven-snapshots'
      workspaces:
        - name: maven-settings
          workspace: maven-settings
        - name: source
          workspace: shared-workspace

    - name: kaniko-build
      taskRef:
        name: kaniko
      runAfter:
        - push
      params:
        - name: IMAGE
          value: "$(tasks.init-values.results.DOCKER_REGISTRY_HOST)/$(tasks.init-values.results.TENANT_NAME)/$(tasks.init-values.results.CODEBASEBRANCH_NAME):$(tasks.getedp-version.results.VERSION)"
        - name: REPO_NAME
          value: "$(tasks.init-values.results.TENANT_NAME)/$(tasks.init-values.results.CODEBASEBRANCH_NAME)"
      workspaces:
        - name: source
          workspace: shared-workspace

    - name: git-tag
      taskRef:
        name: git-cli
      runAfter:
        - kaniko-build
      params:
        - name: GIT_USER_EMAIL
          value: jenkins@edp.ci-user
        - name: GIT_USER_NAME
          value: jenkins
        - name: GIT_SCRIPT
          value: |
            git tag -a "$(tasks.getedp-version.results.VSC_TAG)" -m "Tag is added automatically by CI user"
            git push --tags
      workspaces:
        - name: source
          workspace: shared-workspace
        - name: ssh-directory
          workspace: ssh-creds

    - name: update-cbis
      taskRef:
        name: update-cbis
      runAfter:
        - git-tag
      params:
        - name: CODEBASEBRANCH_NAME
          value: $(tasks.init-values.results.CODEBASEBRANCH_NAME)
        - name: IMAGE_TAG
          value: $(tasks.getedp-version.results.VERSION)