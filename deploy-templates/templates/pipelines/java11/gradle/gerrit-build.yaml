{{ if .Values.gerrit.enabled }}
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: gerrit-gradle-java11-build
  labels:
    {{- include "edp-tekton.labels" . | nindent 4 }}
spec:
  workspaces:
    - name: shared-workspace
    - name: gradle-settings
    - name: ssh-creds
  params:
    - name: pipelineUrl
      default: https://tekton.{{ .Values.global.dnsWildCard }}/#/namespaces/$(context.pipelineRun.namespace)/pipelineruns/$(context.pipelineRun.name)
      type: string
    - name: git-source-url
      default: "https://github.com/sergk/spring-petclinic"
      description: git url to clone
      type: string
    - name: git-source-revision
      description: 'git revision to checkout (branch, tag, sha, refâ€¦)'
      default: "edp"
      type: string
    - name: SONAR_URL
      default: 'http://sonar.{{ .Release.Namespace }}:9000'
      description: SonarQube url for static code analysis
      type: string
    - name: NEXUS_URL
      default: 'http://nexus.{{ .Release.Namespace }}:8081'
      description: Nexus url
      type: string
    - name: CODEBASE_NAME
      default: 'java11-maven'
      description: "Project name"
      type: string
    - name: gradle-image-version
      default: 'gradle:7.5-jdk11'
      description: "gradle image version"
      type: string
  tasks:
    - name: fetch-repository
      taskRef:
        name: git-clone
      params:
        - name: url
          value: $(params.git-source-url)
        - name: revision
          value: $(params.git-source-revision)
      workspaces:
        - name: output
          workspace: shared-workspace
        - name: ssh-directory
          workspace: ssh-creds

    - name: gerrit-notify
      taskRef:
        name: gerrit-ssh-cmd
      runAfter:
        - fetch-repository
      params:
        - name: GERRIT_PORT
          value: {{ .Values.gerrit.sshPort }}
        - name: SSH_GERRIT_COMMAND
          value: review --message 'Build Started $(params.pipelineUrl)' $(tasks.fetch-repository.results.commit)
      workspaces:
        - name: ssh-directory
          workspace: ssh-creds

    - name: init-values
      taskRef:
        name: init-values
      runAfter:
        - fetch-repository
      params:
        - name: CODEBASE_NAME
          value: $(params.CODEBASE_NAME)
        - name: BRANCH_NAME
          value: $(params.git-source-revision)

    - name: getedp-version
      when:
        - input: $(tasks.init-values.results.VERSIONING_TYPE)
          operator: in
          values:
            - edp
      taskRef:
        name: getedp-version
      runAfter:
        - init-values
      params:
        - name: CODEBASEBRANCH_NAME
          value: $(tasks.init-values.results.CODEBASEBRANCH_NAME)

    - name: sast
      taskRef:
        name: sast
      runAfter:
        - fetch-repository
      params:
        - name: reportDataProductName
          value: $(tasks.init-values.results.TENANT_NAME)
        - name: reportDataEngagementName
          value: $(tasks.init-values.results.CODEBASEBRANCH_NAME)
      workspaces:
        - name: source
          workspace: shared-workspace

    - name: compile
      taskRef:
        name: gradle
      runAfter:
        - getedp-version
      params:
        - name: BASE_IMAGE
          value: $(params.gradle-image-version)
        - name: EXTRA_ARGS
          value: |
            -PnexusMavenRepositoryUrl=$(params.NEXUS_URL)/repository/edp-maven-group \
            clean \
            compileJava \
            -x test
      workspaces:
        - name: gradle-settings
          workspace: gradle-settings
        - name: source
          workspace: shared-workspace

    - name: test
      taskRef:
        name: gradle
      runAfter:
        - compile
      params:
        - name: BASE_IMAGE
          value: $(params.gradle-image-version)
        - name: EXTRA_ARGS
          value: |
            -PnexusMavenRepositoryUrl=$(params.NEXUS_URL)/repository/edp-maven-group \
            test \
            jacocoTestReport
      workspaces:
        - name: gradle-settings
          workspace: gradle-settings
        - name: source
          workspace: shared-workspace

    - name: sonar
      taskRef:
        name: gradle
      runAfter:
        - test
      params:
        - name: BASE_IMAGE
          value: $(params.gradle-image-version)
        - name: EXTRA_ARGS
          value: |
            -PnexusMavenRepositoryUrl=$(params.NEXUS_URL)/repository/edp-maven-group \
            -Dsonar.projectKey=$(tasks.init-values.results.CODEBASEBRANCH_NAME) \
            -Dsonar.projectName=$(tasks.init-values.results.CODEBASEBRANCH_NAME) \
            -Dsonar.host.url=$(params.SONAR_URL) \
            sonarqube
      workspaces:
        - name: gradle-settings
          workspace: gradle-settings
        - name: source
          workspace: shared-workspace

    - name: build
      taskRef:
        name: gradle
      runAfter:
        - sonar
      params:
        - name: BASE_IMAGE
          value: $(params.gradle-image-version)
        - name: EXTRA_ARGS
          value: |
            -PnexusMavenRepositoryUrl=$(params.NEXUS_URL)/repository/edp-maven-group \
            build -x test
      workspaces:
        - name: gradle-settings
          workspace: gradle-settings
        - name: source
          workspace: shared-workspace

    - name: push
      taskRef:
        name: gradle
      runAfter:
        - build
      params:
        - name: BASE_IMAGE
          value: $(params.gradle-image-version)
        - name: EXTRA_ARGS
          value: |
            -Dorg.gradle.internal.publish.checksums.insecure=true \
            -PnexusMavenRepositoryUrl=$(params.NEXUS_URL)/repository/edp-maven-snapshots \
            publish
      workspaces:
        - name: gradle-settings
          workspace: gradle-settings
        - name: source
          workspace: shared-workspace

    - name: kaniko-build
      taskRef:
        name: kaniko
      runAfter:
        - push
      params:
        - name: IMAGE
          value: "$(tasks.init-values.results.DOCKER_REGISTRY_HOST)/$(tasks.init-values.results.TENANT_NAME)/$(tasks.init-values.results.CODEBASEBRANCH_NAME):$(tasks.getedp-version.results.VERSION)"
        - name: REPO_NAME
          value: "$(tasks.init-values.results.TENANT_NAME)/$(tasks.init-values.results.CODEBASEBRANCH_NAME)"
      workspaces:
        - name: source
          workspace: shared-workspace

    - name: git-tag
      taskRef:
        name: git-cli
      runAfter:
        - kaniko-build
      params:
        - name: GIT_USER_EMAIL
          value: jenkins@edp.ci-user
        - name: GIT_USER_NAME
          value: jenkins
        - name: GIT_SCRIPT
          value: |
            git tag -a "$(tasks.getedp-version.results.VSC_TAG)" -m "Tag is added automatically by CI user"
            git push --tags
      workspaces:
        - name: source
          workspace: shared-workspace
        - name: ssh-directory
          workspace: ssh-creds

    - name: update-cbis
      taskRef:
        name: update-cbis
      runAfter:
        - git-tag
      params:
        - name: CODEBASEBRANCH_NAME
          value: $(tasks.init-values.results.CODEBASEBRANCH_NAME)
        - name: IMAGE_TAG
          value: $(tasks.getedp-version.results.VERSION)
{{ end }}
