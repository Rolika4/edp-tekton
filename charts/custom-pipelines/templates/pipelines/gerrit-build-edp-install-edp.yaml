{{ if .Values.gerrit.enabled }}
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: gerrit-helm-other-app-build-edp
  labels:
    {{- include "edp-custom-pipelines.labels" . | nindent 4 }}
spec:
  workspaces:
    - name: shared-workspace
    - name: ssh-creds
  params:
    - name: pipelineUrl
      default: https://tekton.{{ .Values.global.dnsWildCard }}/#/namespaces/$(context.pipelineRun.namespace)/pipelineruns/$(context.pipelineRun.name)
      type: string
    - name: git-source-url
      default: "https://github.com/epmd-edp/go-go-beego"
      description: git url to clone
      type: string
    - name: git-source-revision
      description: 'git revision to checkout (branch, tag, sha, refâ€¦)'
      default: "master"
      type: string
    - name: CODEBASE_NAME
      default: "golang-go"
      description: "Project name"
      type: string
    - name: go-image-version
      default: 'golang:1.18.4-alpine3.16'
      description: "go image version"
      type: string
  tasks:

{{- include "gerrit-build-start" . | nindent 4 }}

    - name: get-version
      taskRef:
        name: get-version-edp
      runAfter:
        - init-values
      params:
        - name: CODEBASEBRANCH_NAME
          value: $(tasks.init-values.results.CODEBASEBRANCH_NAME)

    - name: mkdocs-build
      taskRef:
        name: mkdocs
      runAfter:
        - get-version
      workspaces:
        - name: source
          workspace: shared-workspace
        - name: ssh-directory
          workspace: ssh-creds

    - name: git-tag
      taskRef:
        name: git-cli
      runAfter:
        - mkdocs-build
      params:
        - name: GIT_USER_EMAIL
          value: edp-ci@edp.ci-user
        - name: GIT_USER_NAME
          value: edp-ci
        - name: GIT_SCRIPT
          value: |
            git tag -a "$(tasks.get-version.results.VCS_TAG)" -m "Tag is added automatically by CI user"
            git push --tags
      workspaces:
        - name: source
          workspace: shared-workspace
        - name: ssh-directory
          workspace: ssh-creds

    # TODO
    # - name: create-jira-issue-metadata
    #   taskRef:
    #     name: create-jira-issue-metadata
    # - name: ecr-to-docker
    #   taskRef:
    #     name: ecr-to-docker
    #   runAfter:
    #     - create-jira-issue-metadata
    #   params:
    #     - name: ECR_HOST
    #       value: "$(tasks.init-values.results.DOCKER_REGISTRY_HOST)"
    #     - name: ECR_IMAGE
    #       value: "$(tasks.init-values.results.DOCKER_REGISTRY_HOST)/$(tasks.init-values.results.TENANT_NAME)/$(params.CODEBASE_NAME)"
    #     - name: IMAGE_TAG
    #       value: "$(tasks.get-version.results.VERSION)"
    #     - name: CODEBASE_NAME
    #       value: "$(params.CODEBASE_NAME)"
    # TODO
    # - name: set-version
    #   taskRef:
    #     name: set-version
    # TODO
    # - name: helm-push-gh-pages
    #   taskRef:
    #     name: helm-push-gh-pages
{{ end }}
