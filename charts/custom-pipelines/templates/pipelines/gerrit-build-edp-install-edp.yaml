{{ if eq .Values.global.gitProvider "gerrit" }}
apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: gerrit-helm-other-app-build-edp
  labels:
    {{- include "edp-custom-pipelines.labels" . | nindent 4 }}
spec:
  workspaces:
    - name: shared-workspace
    - name: ssh-creds
  params:
    - name: pipelineUrl
      default: https://tekton-{{ .Release.Namespace }}.{{ .Values.global.dnsWildCard }}/#/namespaces/$(context.pipelineRun.namespace)/pipelineruns/$(context.pipelineRun.name)
      type: string
    - name: git-source-url
      default: "https://github.com/epmd-edp/go-go-beego"
      description: git url to clone
      type: string
    - name: git-source-revision
      description: 'git revision to checkout (branch, tag, sha, refâ€¦)'
      default: "master"
      type: string
    - name: changeNumber
      description: Change number from Merge Request
    - name: patchsetNumber
      description: Patchset number from Merge Request
    - name: CODEBASE_NAME
      default: "golang-go"
      description: "Project name"
      type: string
    - name: CODEBASEBRANCH_NAME
      description: "Codebasebranchname"
      type: string
    - name: TICKET_NAME_PATTERN
      description: "Ticket name pattern"
    - name: COMMIT_MESSAGE_PATTERN
      description: "Pattern to validate a commit message"
    - name: COMMIT_MESSAGE
      description: "Commit message"
    - name: JIRA_ISSUE_METADATA_PAYLOAD
      description: "Jira Payload"
    - name: JIRA_SERVER
      description: "Jira server name"
      default: ""
  tasks:

{{- include "gerrit-build-start" . | nindent 4 }}

    - name: get-version
      taskRef:
        kind: Task
        name: get-version-edp
      runAfter:
        - init-values
      params:
        - name: CODEBASEBRANCH_NAME
          value: $(params.CODEBASEBRANCH_NAME)

    - name: mkdocs-build
      taskRef:
        kind: Task
        name: mkdocs
      runAfter:
        - get-version
      workspaces:
        - name: source
          workspace: shared-workspace
          subPath: source
        - name: ssh-directory
          workspace: ssh-creds

    - name: set-version
      taskRef:
        kind: Task
        name: set-version
      runAfter:
        - mkdocs-build
      params:
        - name: IS_TAG
          value: $(tasks.get-version.results.IS_TAG)
      workspaces:
        - name: source
          workspace: shared-workspace
          subPath: source

    - name: wait-for
      taskRef:
        kind: Task
        name: wait-for
      runAfter:
        - set-version

    - name: helm-push-gh-pages
      taskRef:
        kind: Task
        name: helm-push-gh-pages
      runAfter:
        - wait-for
      params:
        - name: CODEBASE_NAME
          value: "$(params.CODEBASE_NAME)"
      workspaces:
        - name: source
          workspace: shared-workspace
          subPath: source

    - name: git-tag
      taskRef:
        kind: Task
        name: git-cli
      runAfter:
        - helm-push-gh-pages
      params:
        - name: GIT_USER_EMAIL
          value: edp-ci@edp.ci-user
        - name: GIT_USER_NAME
          value: edp-ci
        - name: GIT_SCRIPT
          value: |
            git tag -a "$(tasks.get-version.results.VCS_TAG)" -m "Tag is added automatically by CI user"
            git push --tags
      workspaces:
        - name: source
          workspace: shared-workspace
          subPath: source
        - name: ssh-directory
          workspace: ssh-creds

    - name: update-cbis
      taskRef:
        kind: Task
        name: update-cbis
      runAfter:
        - git-tag
      params:
        - name: CBIS_NAME
          value: $(tasks.init-values.results.RESULT_IMAGE_NAME)
        - name: IMAGE_TAG
          value: $(tasks.get-version.results.IS_TAG)

{{ include "finally-block-edp" . | nindent 2 }}

{{ include "send-to-microsoft-teams-build" . | nindent 4 }}

{{ end }}
