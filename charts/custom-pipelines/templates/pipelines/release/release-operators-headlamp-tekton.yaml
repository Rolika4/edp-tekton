{{ if eq .Values.global.gitProvider "gerrit" }}
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: gerrit-operators-app-release-edp
  labels:
    {{- include "edp-custom-pipelines.labels" . | nindent 4 }}
spec:
  workspaces:
    - name: shared-workspace
    - name: ssh-creds
  params:
    - name: git-source-url
      default: "https://github.com/epmd-edp/go-go-beego"
      description: git url to clone
      type: string
    - name: git-source-revision
      description: 'git revision to checkout (branch, tag, sha, refâ€¦)'
      default: "master"
      type: string
    - name: codebase-name
      default: "golang-go"
      description: "Project name"
      type: string
    - name: version
      default: "1.0.0"
      description: "Project version"
      type: string
    - name: build-image
      default: "golang:1.20-bullseye"
      description: "Image for build agent"
      type: string
    - name: goproxy
      default: "http://athens-athens-proxy:80"
      description: "goproxy url"
      type: string
    - name: extra-build-commands
      default: "VERSION=$(params.version) make build"
      description: "Command to run build task"
      type: string
    - name: chart-path
      default: "deploy-templates"
      description: "Path to chart directory"
      type: string
  tasks:
    - name: init-values
      taskRef:
        kind: Task
        name: init-values
      params:
        - name: CODEBASE_NAME
          value: $(params.codebase-name)
        - name: BRANCH_NAME
          value: $(params.git-source-revision)

    - name: validate-release-branch
      taskRef:
        kind: Task
        name: validate-release-branch
      runAfter:
        - init-values
      params:
        - name: branch
          value: $(params.git-source-revision)

    - name: validate-target-version
      taskRef:
        kind: Task
        name: validate-target-version
      runAfter:
        - init-values
      params:
        - name: version
          value: $(params.version)
        - name: git-source-url
          value: $(params.git-source-url)
      workspaces:
        - name: ssh-directory
          workspace: ssh-creds

    - name: fetch-repository
      taskRef:
        kind: Task
        name: git-clone
      runAfter:
        - validate-release-branch
        - validate-target-version
      params:
        - name: url
          value: $(params.git-source-url)
        - name: revision
          value: $(params.git-source-revision)
      workspaces:
        - name: output
          workspace: shared-workspace
        - name: ssh-directory
          workspace: ssh-creds

    - name: update-release-version
      taskRef:
        kind: Task
        name: update-release-version
      runAfter:
        - fetch-repository
      params:
        - name: version
          value: $(params.version)
        - name: chart-path
          value: $(params.chart-path)
      workspaces:
        - name: source
          workspace: shared-workspace

    - name: build
      taskRef:
        kind: Task
        name: build-release
      runAfter:
        - update-release-version
      params:
        - name: base-image
          value: $(params.build-image)
        - name: goproxy
          value: $(params.goproxy)
        - name: extra-commands
          value: $(params.extra-build-commands)
      workspaces:
        - name: source
          workspace: shared-workspace

    - name: create-ecr-repository
      taskRef:
        kind: Task
        name: create-ecr-repository
      runAfter:
        - build
      params:
        - name: REPO_NAME
          value: "$(tasks.init-values.results.TENANT_NAME)/$(params.codebase-name)"

    - name: kaniko-build
      taskRef:
        kind: Task
        name: kaniko
      runAfter:
        - create-ecr-repository
      params:
        - name: IMAGE
          value: "$(tasks.init-values.results.DOCKER_REGISTRY_HOST)/$(tasks.init-values.results.TENANT_NAME)/$(params.codebase-name):$(params.version)"
        - name: IMAGE_TAR
          value: "$(params.codebase-name)_$(params.version)"
        - name: KANIKO_CACHE_REPO
          value: "$(tasks.init-values.results.DOCKER_REGISTRY_HOST)/kaniko-cache"
      workspaces:
        - name: source
          workspace: shared-workspace

    - name: ecr-to-docker
      taskRef:
        kind: Task
        name: ecr-to-docker
      runAfter:
        - kaniko-build
      params:
        - name: ECR_HOST
          value: "$(tasks.init-values.results.DOCKER_REGISTRY_HOST)"
        - name: ECR_IMAGE
          value: "$(tasks.init-values.results.DOCKER_REGISTRY_HOST)/$(tasks.init-values.results.TENANT_NAME)/$(params.codebase-name)"
        - name: IMAGE_TAG
          value: "$(params.version)"
        - name: CODEBASE_NAME
          value: "$(params.codebase-name)"

    - name: wait-for
      taskRef:
        kind: Task
        name: wait-for
      runAfter:
        - update-release-version

    - name: helm-push-gh-pages
      taskRef:
        kind: Task
        name: helm-push-gh-release
      runAfter:
        - wait-for
      params:
        - name: CODEBASE_NAME
          value: "$(params.codebase-name)"
        - name: chart-path
          value: $(params.chart-path)
      workspaces:
        - name: source
          workspace: shared-workspace

    - name: git-release-push
      taskRef:
        kind: Task
        name: git-release-push
      runAfter:
        - helm-push-gh-pages
      params:
        - name: branch
          value: $(params.git-source-revision)
      workspaces:
        - name: source
          workspace: shared-workspace
        - name: ssh-directory
          workspace: ssh-creds
{{ end }}
