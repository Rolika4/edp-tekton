{{ if .Values.gitlab.enabled }}
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: gitlab-gradle-java8-app-review
  labels:
    {{- include "edp-tekton.labels" . | nindent 4 }}
spec:
  workspaces:
    - name: shared-workspace
    - name: settings
    - name: ssh-creds
  params:
    - name: pipelineUrl
      default: https://tekton.{{ .Values.global.dnsWildCard }}/#/namespaces/$(context.pipelineRun.namespace)/pipelineruns/$(context.pipelineRun.name)
      type: string
    - name: git-source-url
      default: "https://github.com/sergk/spring-petclinic"
      description: git url to clone
      type: string
    - name: git-source-revision
      description: 'git revision to checkout (branch, tag, sha, refâ€¦)'
      default: "edp"
      type: string
    - name: git-refspec
      description: Refspec to fetch before checking out revision.
      default: ""
      type: string
    - name: SONAR_URL
      default: 'http://sonar.{{ .Release.Namespace }}:9000'
      description: SonarQube url for static code analysis
      type: string
    - name: NEXUS_URL
      default: 'http://nexus.{{ .Release.Namespace }}:8081'
      description: Nexus url
      type: string
    - name: CODEBASE_NAME
      default: 'java8-maven'
      description: "Project name"
      type: string
    - name: CODEBASEBRANCH_NAME
      description: "Codebasebranch name"
      type: string
    - name: gradle-image-version
      default: 'gradle:7.5.1-jdk8'
      description: "gradle image version"
      type: string
    - name: gitfullrepositoryname
      description: "repository full name"
      type: string
  tasks:

    - name: report-pipeline-start-to-gitlab
      taskRef:
        name: gitlab-set-status
      params:
        - name: "STATE"
          value: "pending"
        - name: "GITLAB_HOST_URL"
          value: "{{ .Values.gitlab.host }}"
        - name: "REPO_FULL_NAME"
          value: "$(params.gitfullrepositoryname)"
        - name: "GITLAB_TOKEN_SECRET_NAME"
          value: {{ .Values.gitlab.webhook.existingSecret }}
        - name: "GITLAB_TOKEN_SECRET_KEY"
          value: {{ .Values.gitlab.webhook.secretKeys.tokenKey }}
        - name: "SHA"
          value: "$(params.git-source-revision)"
        - name: "TARGET_URL"
          value: $(params.pipelineUrl)
        - name: "CONTEXT"
          value: "ci-pipeline"
        - name: "DESCRIPTION"
          value: "Managed by EDP. Run with Tekton"

    - name: fetch-repository
      taskRef:
        name: git-clone
      runAfter:
        - report-pipeline-start-to-gitlab
      params:
        - name: url
          value: $(params.git-source-url)
        - name: revision
          value: $(params.git-source-revision)
        - name: refspec
          value: $(params.git-refspec)
      workspaces:
        - name: output
          workspace: shared-workspace
        - name: ssh-directory
          workspace: ssh-creds

    - name: init-values
      taskRef:
        name: init-values
      runAfter:
        - fetch-repository
      params:
        - name: CODEBASE_NAME
          value: $(params.CODEBASE_NAME)
        - name: BRANCH_NAME
          value: $(params.git-source-revision)

    - name: compile
      taskRef:
        name: gradle
      runAfter:
        - init-values
      params:
        - name: BASE_IMAGE
          value: $(params.gradle-image-version)
        - name: EXTRA_ARGS
          value: |
            -PnexusMavenRepositoryUrl=$(params.NEXUS_URL)/repository/edp-maven-group \
            clean \
            compileJava \
            -x test
      workspaces:
        - name: gradle-settings
          workspace: settings
        - name: source
          workspace: shared-workspace

    - name: test
      taskRef:
        name: gradle
      runAfter:
        - compile
      params:
        - name: BASE_IMAGE
          value: $(params.gradle-image-version)
        - name: EXTRA_ARGS
          value: |
            -PnexusMavenRepositoryUrl=$(params.NEXUS_URL)/repository/edp-maven-group \
            test \
            jacocoTestReport
      workspaces:
        - name: gradle-settings
          workspace: settings
        - name: source
          workspace: shared-workspace

    - name: sonar
      taskRef:
        name: gradle
      runAfter:
        - test
      params:
        - name: BASE_IMAGE
          value: $(params.gradle-image-version)
        - name: EXTRA_ARGS
          value: |
            -PnexusMavenRepositoryUrl=$(params.NEXUS_URL)/repository/edp-maven-group \
            -Dsonar.projectKey=$(params.CODEBASEBRANCH_NAME) \
            -Dsonar.projectName=$(params.CODEBASEBRANCH_NAME) \
            -Dsonar.host.url=$(params.SONAR_URL) \
            -Dsonar.qualitygate.wait=true \
            sonarqube
      workspaces:
        - name: gradle-settings
          workspace: settings
        - name: source
          workspace: shared-workspace

    - name: build
      taskRef:
        name: gradle
      runAfter:
        - sonar
      params:
        - name: BASE_IMAGE
          value: $(params.gradle-image-version)
        - name: EXTRA_ARGS
          value: |
            -PnexusMavenRepositoryUrl=$(params.NEXUS_URL)/repository/edp-maven-group \
            build -x test
      workspaces:
        - name: gradle-settings
          workspace: settings
        - name: source
          workspace: shared-workspace

    - name: dockerfile-lint
      taskRef:
        name: hadolint
      runAfter:
        - fetch-repository
      workspaces:
        - name: source
          workspace: shared-workspace

    - name: dockerbuild-verify
      taskRef:
        name: kaniko
      runAfter:
        - build
        - dockerfile-lint
      params:
        - name: IMAGE
          value: "placeholder:latest"
        - name: EXTRA_ARGS
          value:
            - --no-push
      workspaces:
        - name: source
          workspace: shared-workspace

    - name: helm-lint
      taskRef:
        name: helm-lint
      runAfter:
        - fetch-repository
      params:
        - name: EXTRA_COMMANDS
          value: |
            ct lint --validate-maintainers=false --charts deploy-templates/
      workspaces:
        - name: source
          workspace: shared-workspace

  finally:
    - name: gitlab-set-success-status
      when:
        - input: "$(tasks.status)"
          operator: in
          values: ["Succeeded"]
      taskRef:
        name: gitlab-set-status
      params:
        - name: "STATE"
          value: "success"
        - name: "GITLAB_HOST_URL"
          value: "{{ .Values.gitlab.host }}"
        - name: "REPO_FULL_NAME"
          value: "$(params.gitfullrepositoryname)"
        - name: "GITLAB_TOKEN_SECRET_NAME"
          value: {{ .Values.gitlab.webhook.existingSecret }}
        - name: "GITLAB_TOKEN_SECRET_KEY"
          value: {{ .Values.gitlab.webhook.secretKeys.tokenKey }}
        - name: "SHA"
          value: "$(params.git-source-revision)"
        - name: "TARGET_URL"
          value: $(params.pipelineUrl)
        - name: "CONTEXT"
          value: "ci-pipeline"
        - name: "DESCRIPTION"
          value: "Managed by EDP. Run with Tekton"
    - name: gitlab-set-failure-status
      when:
        - input: "$(tasks.status)"
          operator: in
          values: ["Failed"]
      taskRef:
        name: gitlab-set-status
      params:
        - name: "STATE"
          value: "failed"
        - name: "GITLAB_HOST_URL"
          value: "{{ .Values.gitlab.host }}"
        - name: "REPO_FULL_NAME"
          value: "$(params.gitfullrepositoryname)"
        - name: "GITLAB_TOKEN_SECRET_NAME"
          value: {{ .Values.gitlab.webhook.existingSecret }}
        - name: "GITLAB_TOKEN_SECRET_KEY"
          value: {{ .Values.gitlab.webhook.secretKeys.tokenKey }}
        - name: "SHA"
          value: "$(params.git-source-revision)"
        - name: "TARGET_URL"
          value: $(params.pipelineUrl)
        - name: "CONTEXT"
          value: "ci-pipeline"
        - name: "DESCRIPTION"
          value: "Managed by EDP. Run with Tekton"
{{ end }}
