{{- define "reactjs-npm-build-common" -}}
- name: test
  taskRef:
    kind: Task
    name: npm
  runAfter:
    - compile
  params:
    - name: BASE_IMAGE
      value: $(params.npm-image-version)
    - name: EXTRA_COMMANDS
      value: |
        npm run test:coverage
  workspaces:
    - name: source
      workspace: shared-workspace

- name: sonar
  taskRef:
    kind: Task
    name: sonarqube-scanner
  runAfter:
    - test
  params:
    - name: SONAR_HOST_URL
      value: $(params.SONAR_URL)
    - name: SONAR_PROJECT_KEY
      value: $(params.CODEBASEBRANCH_NAME)
    - name: SONAR_PROJECT_NAME
      value: $(params.CODEBASEBRANCH_NAME)
  workspaces:
    - name: source
      workspace: shared-workspace

- name: build
  taskRef:
    kind: Task
    name: npm
  runAfter:
    - sonar
  params:
    - name: BASE_IMAGE
      value: $(params.npm-image-version)
    - name: EXTRA_COMMANDS
      value: |
        upBase64=$(echo -n ${CI_USERNAME}:${CI_PASSWORD} | base64)
        npm set registry http://${NEXUS_REPOSITORY_URL}/ --location project
        npm set //${NEXUS_REPOSITORY_URL}/:always-auth true --location project
        npm set //${NEXUS_REPOSITORY_URL}/:email edp-ci@edp.local --location project
        npm set //${NEXUS_REPOSITORY_URL}/:_auth $upBase64 --location project
        npm install
        npm run build:prod
  workspaces:
    - name: source
      workspace: shared-workspace

- name: get-nexus-repository-url
  taskRef:
    kind: Task
    name: get-nexus-repository-url
  runAfter:
    - build
  params:
    - name: VERSION
      value: $(tasks.get-version.results.VERSION)
    - name: NEXUS_URL
      value: $(params.NEXUS_URL)
    - name: TOOL
      value: "npm"

- name: push
  taskRef:
    kind: Task
    name: npm
  runAfter:
    - get-nexus-repository-url
  params:
    - name: BASE_IMAGE
      value: $(params.npm-image-version)
    - name: NEXUS_REPOSITORY_URL
      value: "$(tasks.get-nexus-repository-url.results.NEXUS_REPOSITORY_URL)"
    - name: EXTRA_COMMANDS
      value: |
        NPM_REPO=$(echo ${NEXUS_REPOSITORY_URL} | cut -d ':' -f2-)
        upBase64=$(echo -n ${CI_USERNAME}:${CI_PASSWORD} | base64)
        npm set registry ${NEXUS_REPOSITORY_URL}/
        npm set ${NPM_REPO}/:always-auth=true
        npm set ${NPM_REPO}/:email=edp-ci@edp.local
        npm set ${NPM_REPO}/:_auth=${upBase64} 
        npm publish
  workspaces:
    - name: source
      workspace: shared-workspace
{{- end -}}

{{- define "reactjs-npm-review-common" -}}
- name: compile
  taskRef:
    kind: Task
    name: npm
  runAfter:
    - init-values
  params:
    - name: BASE_IMAGE
      value: $(params.npm-image-version)
    - name: EXTRA_COMMANDS
      value: |
        upBase64=$(echo -n ${CI_USERNAME}:${CI_PASSWORD} | base64)
        npm set registry http://${NEXUS_REPOSITORY_URL}/ --location project
        npm set //${NEXUS_REPOSITORY_URL}/:always-auth true --location project
        npm set //${NEXUS_REPOSITORY_URL}/:email edp-ci@edp.local --location project
        npm set //${NEXUS_REPOSITORY_URL}/:_auth $upBase64 --location project
        npm install
        npm run build:clean
  workspaces:
    - name: source
      workspace: shared-workspace

- name: test
  taskRef:
    kind: Task
    name: npm
  runAfter:
    - compile
  params:
    - name: BASE_IMAGE
      value: $(params.npm-image-version)
    - name: EXTRA_COMMANDS
      value: |
        npm run test:coverage
  workspaces:
    - name: source
      workspace: shared-workspace

# The fetch-target-branch Task will fetch the target branch during the code-review pipeline
# because the fetch-repository Task fetches only user changes.
- name: fetch-target-branch
  taskRef:
    kind: Task
    name: git-cli
  runAfter:
    - test
  params:
    - name: GIT_USER_EMAIL
      value: edp-ci@edp.ci-user
    - name: GIT_USER_NAME
      value: edp-ci
    - name: GIT_SCRIPT
      value: |
        git fetch origin $(params.targetBranch):refs/remotes/origin/$(params.targetBranch)
  workspaces:
    - name: source
      workspace: shared-workspace
    - name: ssh-directory
      workspace: ssh-creds

- name: sonar-prepare-files
  taskRef:
    kind: Task
    name: sonar-prepare-files-general
  runAfter:
    - fetch-target-branch
  params:
    - name: CODEBASE_NAME
      value: $(params.CODEBASE_NAME)
    - name: BRANCH_NAME
      value: $(params.targetBranch)
    - name: NORMALIZED_BRANCH
      value: $(tasks.init-values.results.NORMALIZED_BRANCH)
    - name: CHANGE_NUMBER
      value: $(params.changeNumber)
    - name: PATCHSET_NUMBER
      value: $(params.patchsetNumber)
  workspaces:
    - name: source
      workspace: shared-workspace

- name: sonar
  taskRef:
    kind: Task
    name: sonarqube-scanner
  runAfter:
    - sonar-prepare-files
  params:
    - name: SONAR_HOST_URL
      value: $(params.SONAR_URL)
    - name: SONAR_PROJECT_KEY
      value: $(tasks.sonar-prepare-files.results.SONAR_PROJECT_KEY)
    - name: SONAR_PROJECT_NAME
      value: $(tasks.sonar-prepare-files.results.SONAR_PROJECT_KEY)
    - name: SONAR_SOURCES
      value: $(tasks.sonar-prepare-files.results.SONAR_SOURCES)
  workspaces:
    - name: source
      workspace: shared-workspace
{{- end -}}
