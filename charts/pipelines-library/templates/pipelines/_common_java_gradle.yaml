{{- define "java-gradle-build-common" -}}
- name: build
  taskRef:
    kind: Task
    name: edp-gradle
  runAfter:
    - get-cache
    - update-build-number
  params:
    - name: BASE_IMAGE
      value: $(params.image)
  workspaces:
    - name: source
      workspace: shared-workspace

- name: sonar
  taskRef:
    kind: Task
    name: gradle
  runAfter:
    - build
  params:
    - name: BASE_IMAGE
      value: $(params.sonar_image)
    - name: EXTRA_ARGS
      value: |
        -PnexusMavenRepositoryUrl=${NEXUS_HOST_URL}/repository/edp-maven-group \
        -Dsonar.projectKey=$(params.CODEBASEBRANCH_NAME) \
        -Dsonar.projectName=$(params.CODEBASEBRANCH_NAME) \
        -Dsonar.host.url=${SONAR_HOST_URL} \
        -Dsonar.qualitygate.wait=true \
        sonarqube
  workspaces:
    - name: source
      workspace: shared-workspace
      subPath: source

- name: get-nexus-repository-url
  taskRef:
    kind: Task
    name: get-nexus-repository-url
  runAfter:
    - get-version
  params:
    - name: VERSION
      value: $(tasks.get-version.results.VERSION)
    - name: TOOL
      value: "maven"

- name: push
  taskRef:
    kind: Task
    name: gradle
  runAfter:
    - sonar
    - get-nexus-repository-url
  params:
    - name: BASE_IMAGE
      value: $(params.image)
    - name: EXTRA_ARGS
      value: |
        -Dorg.gradle.internal.publish.checksums.insecure=true \
        -PnexusMavenRepositoryUrl=$(tasks.get-nexus-repository-url.results.NEXUS_REPOSITORY_URL) \
        publish
  workspaces:
    - name: source
      workspace: shared-workspace
      subPath: source
{{- end -}}

{{- define "java-gradle-review-common" -}}
- name: build
  taskRef:
    kind: Task
    name: edp-gradle
  runAfter:
    - get-cache
  params:
    - name: BASE_IMAGE
      value: $(params.image)
  workspaces:
    - name: source
      workspace: shared-workspace

# The fetch-target-branch Task will fetch the target branch during the code-review pipeline
# because the fetch-repository Task fetches only user changes.
- name: fetch-target-branch
  taskRef:
    kind: Task
    name: git-cli
  runAfter:
    - build
  params:
    - name: GIT_USER_EMAIL
      value: edp-ci@edp.ci-user
    - name: GIT_USER_NAME
      value: edp-ci
    - name: GIT_SCRIPT
      value: |
        git fetch origin $(params.targetBranch):refs/remotes/origin/$(params.targetBranch)
  workspaces:
    - name: source
      workspace: shared-workspace
      subPath: source
    - name: ssh-directory
      workspace: ssh-creds

- name: sonar-prepare-files
  taskRef:
    kind: Task
    name: sonar-prepare-files-gradle
  runAfter:
    - fetch-target-branch
  params:
    - name: CODEBASE_NAME
      value: $(params.CODEBASE_NAME)
    - name: BRANCH_NAME
      value: $(params.targetBranch)
    - name: NORMALIZED_BRANCH
      value: $(tasks.init-values.results.NORMALIZED_BRANCH)
    - name: CHANGE_NUMBER
      value: $(params.changeNumber)
    - name: PATCHSET_NUMBER
      value: $(params.patchsetNumber)
  workspaces:
    - name: source
      workspace: shared-workspace
      subPath: source

- name: sonar
  taskRef:
    kind: Task
    name: gradle
  runAfter:
    - sonar-prepare-files
  params:
    - name: BASE_IMAGE
      value: $(params.sonar_image)
    - name: EXTRA_ARGS
      value: |
        -PnexusMavenRepositoryUrl=${NEXUS_HOST_URL}/repository/edp-maven-group \
        -Dsonar.projectKey=$(tasks.sonar-prepare-files.results.SONAR_PROJECT_KEY) \
        -Dsonar.projectName=$(tasks.sonar-prepare-files.results.SONAR_PROJECT_KEY) \
        -Dsonar.host.url=${SONAR_HOST_URL} \
        -Dsonar.sources=$(tasks.sonar-prepare-files.results.SONAR_SOURCES) \
        -Dsonar.qualitygate.wait=true \
        sonarqube
  workspaces:
    - name: source
      workspace: shared-workspace
      subPath: source
{{- end -}}

{{- define "dockerbuild-verify-gradle" -}}
- name: dockerbuild-verify
  taskRef:
    kind: Task
    name: dockerbuild-verify
  runAfter:
    - build
    - dockerfile-lint
  workspaces:
    - name: source
      workspace: shared-workspace
      subPath: source
{{- end -}}

{{- define "build-pipeline-java-gradle-image-build-push-common" -}}
- name: kaniko-build
  taskRef:
    kind: Task
    name: kaniko
  runAfter:
    - push
  params:
    - name: codebase-name
      value: "$(params.CODEBASE_NAME)"
    - name: image-tag
      value: "$(tasks.get-version.results.IS_TAG)"
    - name: image-tar
      value: "$(params.CODEBASE_NAME)_$(tasks.get-version.results.IS_TAG)"
    - name: kaniko-cache-path
      value: "kaniko-cache"
  workspaces:
    - name: source
      workspace: shared-workspace
      subPath: source
{{- end -}}
