{{ if eq .Values.global.gitProvider "gerrit" }}
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: gerrit-python-flask-app-build-default
  labels:
    {{- include "edp-tekton.labels" . | nindent 4 }}
spec:
  workspaces:
    - name: shared-workspace
    - name: ssh-creds
  params:
    - name: pipelineUrl
      default: https://tekton-{{ .Release.Namespace }}.{{ .Values.global.dnsWildCard }}/#/namespaces/$(context.pipelineRun.namespace)/pipelineruns/$(context.pipelineRun.name)
      type: string
    - name: git-source-url
      default: "python-python-python-3.8"
      description: git url to clone
      type: string
    - name: git-source-revision
      description: 'git revision to checkout (branch, tag, sha, refâ€¦)'
      default: "master"
      type: string
    - name: CODEBASE_NAME
      default: "python-app"
      description: "Project name"
      type: string
    - name: CODEBASEBRANCH_NAME
      description: "Codebasebranch name"
      type: string
    - name: changeNumber
      description: Change number from Merge Request
    - name: patchsetNumber
      description: Patchset number from Merge Request
    - name: TICKET_NAME_PATTERN
      description: "Ticket name pattern"
      default: ""
    - name: COMMIT_MESSAGE_PATTERN
      description: "Pattern to validate a commit message"
      default: ""
    - name: COMMIT_MESSAGE
      description: "Commit message"
      default: ""
    - name: JIRA_ISSUE_METADATA_PAYLOAD
      description: "Jira Payload"
      default: ""
    - name: JIRA_SERVER
      description: "Jira server name"
      default: ""
  tasks:

{{- include "gerrit-build-start" . | nindent 4 }}

    - name: get-version
      taskRef:
        kind: Task
        name: get-version-default
      runAfter:
        - init-values
      params:
        - name: BRANCH_NAME
          value: $(params.git-source-revision)
      workspaces:
        - name: source
          workspace: shared-workspace

    - name: update-build-number
      taskRef:
        kind: Task
        name: update-build-number-python-default
      runAfter:
        - get-version
      params:
        - name: VERSION
          value: $(tasks.get-version.results.VERSION)
      workspaces:
        - name: source
          workspace: shared-workspace

{{ include "sonar-cleanup" . | nindent 4 }}

{{ include "sast" . | nindent 4 }}

    - name: test
      taskRef:
        kind: Task
        name: python
      runAfter:
        - sast
      params:
        - name: EXTRA_COMMANDS
          value: |
            pip3 install -r test-requirements.txt
            pytest -sv --color=yes
      workspaces:
        - name: source
          workspace: shared-workspace

    - name: lint
      taskRef:
        kind: Task
        name: python
      runAfter:
        - test
      params:
        - name: EXTRA_COMMANDS
          value: |
            pip3 install -r test-requirements.txt
            pylint --output-format=colorized *.py
            flake8 --exclude .local --filename=*.py
      workspaces:
        - name: source
          workspace: shared-workspace

    - name: compile
      taskRef:
        kind: Task
        name: python
      runAfter:
        - lint
      params:
        - name: EXTRA_COMMANDS
          value: |
            set -ex
            python setup.py clean build install --user
      workspaces:
        - name: source
          workspace: shared-workspace

    - name: sonar
      taskRef:
        kind: Task
        name: sonarqube-scanner
      runAfter:
        - sonar-cleanup
        - compile
      params:
        - name: SONAR_PROJECT_KEY
          value: $(params.CODEBASEBRANCH_NAME)
        - name: SONAR_PROJECT_NAME
          value: $(params.CODEBASEBRANCH_NAME)
      workspaces:
        - name: source
          workspace: shared-workspace

    - name: get-nexus-repository-url
      taskRef:
        kind: Task
        name: get-nexus-repository-url
      runAfter:
        - get-version
      params:
        - name: VERSION
          value: $(tasks.get-version.results.VERSION)
        - name: TOOL
          value: "python"

    - name: push
      taskRef:
        kind: Task
        name: python
      runAfter:
        - sonar
        - get-nexus-repository-url
      params:
        - name: TWINE_REPOSITORY_URL
          value: "$(tasks.get-nexus-repository-url.results.NEXUS_REPOSITORY_URL)/"
        - name: EXTRA_COMMANDS
          value: |
            pip3 install -r test-requirements.txt
            python setup.py sdist
            twine upload dist/*
      workspaces:
        - name: source
          workspace: shared-workspace

{{- include "build-pipeline-python-image-build-push-common" . | nindent 4 }}

{{ include "build-pipeline-end" . | nindent 4 }}

{{ include "finally-block-default" . | nindent 2 }}

{{ end }}
