{{- define "java-maven-build-common" -}}
- name: compile
  taskRef:
    kind: Task
    name: maven
  runAfter:
    - get-cache
    - security
  params:
    - name: MAVEN_IMAGE
      value: $(params.image)
    - name: GOALS
      value:
        - -B
        - compile
  workspaces:
    - name: source
      workspace: shared-workspace

- name: test
  taskRef:
    kind: Task
    name: maven
  runAfter:
    - compile
  params:
    - name: MAVEN_IMAGE
      value: $(params.image)
    - name: GOALS
      value:
        - -B
        - org.jacoco:jacoco-maven-plugin:prepare-agent
        - '-Dmaven.test.failure.ignore=true'
        - verify
        - org.jacoco:jacoco-maven-plugin:report
  workspaces:
    - name: source
      workspace: shared-workspace

- name: sonar
  taskRef:
    kind: Task
    name: maven
  runAfter:
    - test
  params:
    - name: MAVEN_IMAGE
      value: $(params.sonar_image)
    - name: GOALS
      value:
        - -B
        - '-Dsonar.projectKey=$(params.CODEBASEBRANCH_NAME)'
        - '-Dsonar.projectName=$(params.CODEBASEBRANCH_NAME)'
        - '-Dsonar.qualitygate.wait=true'
        - verify
        - sonar:sonar
  workspaces:
    - name: source
      workspace: shared-workspace

- name: build
  taskRef:
    kind: Task
    name: maven
  runAfter:
    - sonar
  params:
    - name: MAVEN_IMAGE
      value: $(params.image)
    - name: GOALS
      value:
        - -B
        - clean
        - package
        - '-DskipTests=true'
  workspaces:
    - name: source
      workspace: shared-workspace

- name: push
  taskRef:
    kind: Task
    name: maven
  runAfter:
    - build
  params:
    - name: MAVEN_IMAGE
      value: $(params.image)
    - name: GOALS
      value:
        - -B
        - deploy
        - '-DskipTests=true'
  workspaces:
    - name: source
      workspace: shared-workspace
{{- end -}}

{{- define "java-maven-review-common" -}}
- name: compile
  taskRef:
    kind: Task
    name: maven
  runAfter:
    - get-cache
  params:
    - name: MAVEN_IMAGE
      value: $(params.image)
    - name: GOALS
      value:
        - -B
        - compile
  workspaces:
    - name: source
      workspace: shared-workspace

- name: test
  taskRef:
    kind: Task
    name: maven
  runAfter:
    - compile
  params:
    - name: MAVEN_IMAGE
      value: $(params.image)
    - name: GOALS
      value:
        - -B
        - org.jacoco:jacoco-maven-plugin:prepare-agent
        - '-Dmaven.test.failure.ignore=true'
        - verify
        - org.jacoco:jacoco-maven-plugin:report
  workspaces:
    - name: source
      workspace: shared-workspace

# The fetch-target-branch Task will fetch the target branch during the code-review pipeline
# because the fetch-repository Task fetches only user changes.
- name: fetch-target-branch
  taskRef:
    kind: Task
    name: git-cli
  runAfter:
    - test
  params:
    - name: GIT_USER_EMAIL
      value: edp-ci@edp.ci-user
    - name: GIT_USER_NAME
      value: edp-ci
    - name: GIT_SCRIPT
      value: |
        git fetch origin $(params.targetBranch):refs/remotes/origin/$(params.targetBranch)
  workspaces:
    - name: source
      workspace: shared-workspace
      subPath: source
    - name: ssh-directory
      workspace: ssh-creds

- name: sonar-prepare-files
  taskRef:
    kind: Task
    name: sonar-prepare-files-maven
  runAfter:
    - fetch-target-branch
  params:
    - name: CODEBASE_NAME
      value: $(params.CODEBASE_NAME)
    - name: BRANCH_NAME
      value: $(params.targetBranch)
    - name: NORMALIZED_BRANCH
      value: $(tasks.init-values.results.NORMALIZED_BRANCH)
    - name: CHANGE_NUMBER
      value: $(params.changeNumber)
    - name: PATCHSET_NUMBER
      value: $(params.patchsetNumber)
  workspaces:
    - name: source
      workspace: shared-workspace
      subPath: source

- name: sonar
  taskRef:
    kind: Task
    name: maven
  runAfter:
    - sonar-prepare-files
  params:
    - name: MAVEN_IMAGE
      value: $(params.sonar_image)
    - name: GOALS
      value:
        - -B
        - '-Dsonar.projectKey=$(tasks.sonar-prepare-files.results.SONAR_PROJECT_KEY)'
        - '-Dsonar.projectName=$(tasks.sonar-prepare-files.results.SONAR_PROJECT_KEY)'
        - '-Dsonar.qualitygate.wait=true'
        - '-Dsonar.sources=$(tasks.sonar-prepare-files.results.SONAR_SOURCES)'
        - verify
        - sonar:sonar
  workspaces:
    - name: source
      workspace: shared-workspace

- name: build
  taskRef:
    kind: Task
    name: maven
  runAfter:
    - sonar
  params:
    - name: MAVEN_IMAGE
      value: $(params.image)
    - name: GOALS
      value:
        - -B
        - clean
        - package
        - '-DskipTests=true'
  workspaces:
    - name: source
      workspace: shared-workspace
{{- end -}}

{{- define "java-maven-get-module" -}}
- name: get-maven-module
  taskRef:
    kind: Task
    name: get-maven-module
  runAfter:
    - init-values
  workspaces:
    - name: source
      workspace: shared-workspace
      subPath: source
{{- end -}}

{{- define "dockerbuild-verify-maven" -}}
- name: dockerbuild-verify
  taskRef:
    kind: Task
    name: dockerbuild-verify
  runAfter:
    - get-maven-module
    - build
    - dockerfile-lint
  params:
    - name: context
      value: "$(tasks.get-maven-module.results.DEPLOYABLE_MODULE_DIR)"
  workspaces:
    - name: source
      workspace: shared-workspace
      subPath: source
{{- end -}}

{{- define "build-pipeline-java-maven-image-build-push-common" -}}
- name: kaniko-build
  taskRef:
    kind: Task
    name: kaniko
  runAfter:
    - get-maven-module
    - push
    - build
  params:
    - name: codebase-name
      value: "$(params.CODEBASE_NAME)"
    - name: image-tag
      value: "$(tasks.get-version.results.IS_TAG)"
    - name: image-tar
      value: "$(params.CODEBASE_NAME)_$(tasks.get-version.results.IS_TAG)"
    - name: kaniko-cache-path
      value: "kaniko-cache"
  workspaces:
    - name: source
      workspace: shared-workspace
      subPath: source
{{- end -}}
