{{ if .Values.gerrit.enabled }}
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: gerrit-dotnet-31-review
  labels:
    {{- include "edp-tekton.labels" . | nindent 4 }}
spec:
  workspaces:
    - name: shared-workspace
    - name: ssh-creds
  params:
    - name: pipelineUrl
      default: https://tekton.{{ .Values.global.dnsWildCard }}/#/namespaces/$(context.pipelineRun.namespace)/pipelineruns/$(context.pipelineRun.name)
      type: string
    - name: git-source-url
      default: "https://github.com/epmd-edp/dotnet-dotnet-dotnet-3.1"
      description: git url to clone
      type: string
    - name: git-source-revision
      description: 'git revision to checkout (branch, tag, sha, refâ€¦)'
      default: "edp"
      type: string
    - name: git-refspec
      description: Refspec to fetch before checking out revision.
      default: ""
      type: string
    - name: dotnet-sdk-image-version
      default: 'mcr.microsoft.com/dotnet/sdk:3.1.423-alpine3.16'
      description: "dotnet-sdk image version"
      type: string
  tasks:
    - name: fetch-repository
      taskRef:
        name: git-clone
      params:
        - name: url
          value: $(params.git-source-url)
        - name: revision
          value: $(params.git-source-revision)
        - name: refspec
          value: $(params.git-refspec)
      workspaces:
        - name: output
          workspace: shared-workspace
        - name: ssh-directory
          workspace: ssh-creds

    - name: compile
      taskRef:
        name: dotnet
      runAfter:
        - fetch-repository
      params:
        - name: BASE_IMAGE
          value: $(params.dotnet-sdk-image-version)
        - name: EXTRA_COMMANDS
          value: |
            slnFilename=$(ls *.sln)
            dotnet publish $slnFilename
      workspaces:
        - name: source
          workspace: shared-workspace

    - name: test
      taskRef:
        name: dotnet
      runAfter:
        - compile
      params:
        - name: BASE_IMAGE
          value: $(params.dotnet-sdk-image-version)
        - name: EXTRA_COMMANDS
          value: |
            apk add --no-cache findutils
            ls *Tests*/*.csproj | xargs -L1 dotnet test /p:CollectCoverage=true /p:CoverletOutputFormat=opencover
      workspaces:
        - name: source
          workspace: shared-workspace

    - name: dockerfile-lint
      taskRef:
        name: hadolint
      runAfter:
        - fetch-repository
      workspaces:
        - name: source
          workspace: shared-workspace

    - name: helm-lint
      taskRef:
        name: helm-lint
      runAfter:
        - fetch-repository
      workspaces:
        - name: source
          workspace: shared-workspace

  finally:
    - name: gerrit-vote-success
      when:
        - input: "$(tasks.status)"
          operator: in
          values: ["Succeeded"]
      taskRef:
        name: gerrit-ssh-cmd
      params:
        - name: GERRIT_PORT
          value: {{ .Values.gerrit.sshPort }}
        - name: SSH_GERRIT_COMMAND
          value: "review --verified +1 --message 'Build Successfull $(params.pipelineUrl)' $(tasks.fetch-repository.results.commit)"
      workspaces:
        - name: ssh-directory
          workspace: ssh-creds

    - name: gerrit-vote-failure
      when:
        - input: "$(tasks.status)"
          operator: in
          values: ["Failed"]
      taskRef:
        name: gerrit-ssh-cmd
      params:
        - name: GERRIT_PORT
          value: {{ .Values.gerrit.sshPort }}
        - name: SSH_GERRIT_COMMAND
          value: "review --verified -1 --message 'Build Failed $(params.pipelineUrl)' $(tasks.fetch-repository.results.commit)"
      workspaces:
        - name: ssh-directory
          workspace: ssh-creds
{{ end }}
