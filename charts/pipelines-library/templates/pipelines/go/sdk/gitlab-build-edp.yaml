{{ if eq .Values.global.gitProvider "gitlab" }}
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: gitlab-go-operator-sdk-app-build-edp
  labels:
    {{- include "edp-tekton.labels" . | nindent 4 }}
spec:
  workspaces:
    - name: shared-workspace
    - name: ssh-creds
  params:
    - name: git-source-url
      default: "https://github.com/epmd-edp/go-go-operator-sdk"
      description: git url to clone
      type: string
    - name: git-source-revision
      description: 'git revision to checkout (branch, tag, sha, refâ€¦)'
      default: "master"
      type: string
    - name: SONAR_URL
      default: 'http://sonar.{{ .Release.Namespace }}:9000'
      description: SonarQube url for static code analysis
      type: string
    - name: NEXUS_URL
      default: 'http://nexus.{{ .Release.Namespace }}:8081'
      description: Nexus url
      type: string
    - name: CODEBASE_NAME
      default: "golang-go"
      description: "Project name"
      type: string
    - name: CODEBASEBRANCH_NAME
      description: "Codebasebranch name"
      type: string
    - name: go-image-version
      default: 'golang:1.18.4-bullseye'
      description: "go image version"
      type: string
  tasks:

{{- include "gitlab-build-start" . | nindent 4 }}

    - name: get-version
      taskRef:
        name: get-version-edp
      runAfter:
        - init-values
      params:
        - name: CODEBASEBRANCH_NAME
          value: $(params.CODEBASEBRANCH_NAME)

    - name: sast
      taskRef:
        name: sast
      runAfter:
        - get-version
      params:
        - name: reportDataProductName
          value: $(tasks.init-values.results.TENANT_NAME)
        - name: reportDataEngagementName
          value: $(params.CODEBASEBRANCH_NAME)
      workspaces:
        - name: source
          workspace: shared-workspace

    - name: test
      taskRef:
        name: golang
      runAfter:
        - sast
      params:
        - name: BASE_IMAGE
          value: $(params.go-image-version)
        - name: EXTRA_ARGS
          value: |
            make test
      workspaces:
        - name: source
          workspace: shared-workspace

    - name: sonar
      taskRef:
        name: sonarqube-scanner
      runAfter:
        - test
      params:
        - name: SONAR_HOST_URL
          value: $(params.SONAR_URL)
        - name: SONAR_PROJECT_KEY
          value: $(params.CODEBASEBRANCH_NAME)
        - name: SONAR_PROJECT_NAME
          value: $(params.CODEBASEBRANCH_NAME)
      workspaces:
        - name: source
          workspace: shared-workspace

    - name: build
      taskRef:
        name: golang
      runAfter:
        - sonar
      params:
        - name: BASE_IMAGE
          value: $(params.go-image-version)
        - name: EXTRA_ARGS
          value: |
            make build
      workspaces:
        - name: source
          workspace: shared-workspace

    - name: create-ecr-repository
      taskRef:
        name: create-ecr-repository
      runAfter:
        - build
      params:
        - name: REPO_NAME
          value: "$(tasks.init-values.results.TENANT_NAME)/$(params.CODEBASE_NAME)"

{{ include "build-pipeline-end" . | nindent 4 }}

{{ include "update-cbb" . | nindent 2 }}

{{ end }}
