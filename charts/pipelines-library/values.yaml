# Default values for edp-tekton.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

nameOverride: ""
fullnameOverride: ""

global:
  # -- Define Git Provider to be used in Pipelines. Can be gerrit (default), gitlab, github
  gitProvider: gerrit
  # -- a cluster DNS wildcard name
  dnsWildCard: ""
  # -- Gerrit SSH node port
  gerritSSHPort: "30003"
  # -- platform type that can be "kubernetes" or "openshift"
  platform: "kubernetes"

# Kaniko configuration section
kaniko:
  # -- AWS IAM role to be used for kaniko pod service account (IRSA). Format: arn:aws:iam::<AWS_ACCOUNT_ID>:role/<AWS_IAM_ROLE_NAME>
  roleArn: ""

github:
  # -- The GitHub host, adjust this if you run a GitHub enterprise. Default: github.com
  host: github.com
  webhook:
    # -- Existing secret which holds GitHub integration credentials: Username, Access Token, Secret String and Private SSH Key
    existingSecret: github

gitlab:
  # -- The GitLab host, adjust this if you run a GitLab enterprise. Default: gitlab.com
  host: git.epam.com
  webhook:
    # -- Existing secret which holds GitLab integration credentials: Username, Access Token, Secret String and Private SSH Key
    existingSecret: gitlab

tekton:
  # Pruner provides auto clean up feature for the Tekton resources
  pruner:
    # -- Specifies whether a cronjob should be created
    create: true
    # -- How often to clean up resources
    schedule: "0 18 * * *"
    # -- Maximum number of resources to keep while deleting removing
    keep: 1
    # -- Supported resource for auto prune is 'pipelinerun'
    resources: "pipelinerun"
  # -- Tekton workspace size. Most cases 1Gi is enough. It's common for all pipelines
  workspaceSize: "3Gi"
  # -- The resource limits and requests for the Tekton Tasks
  resources:
    limits:
      cpu: "2"
      memory: "3Gi"
    requests:
      cpu: "0.5"
      memory: "2Gi"

# Deploy EDP Tekton Interceptor along with pipelines library
interceptor:
  # -- Deploy EDP interceptor as a part of pipeline library when true. Default: true
  enabled: true

  nameOverride: "edp-tekton-interceptor"

  image:
    repository: epamedp/edp-tekton
    pullPolicy: IfNotPresent
    # -- Overrides the image tag whose default is the chart appVersion.
    tag:

  imagePullSecrets: []

  serviceAccount:
    # -- Annotations to add to the service account
    annotations: {}
    # -- The name of the service account to use.
    # -- If not set, a name is generated using the fullname template
    name: ""

  podAnnotations: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
      - ALL
    readOnlyRootFilesystem: true
    runAsNonRoot: true
    runAsUser: 65532
    runAsGroup: 65532

ctLint:
  validateMaintainers: ""
  chartSchema: |
    name: str()
    home: str()
    version: str()
    type: str()
    apiVersion: str()
    appVersion: any(str(), num())
    description: str()
    keywords: list(str(), required=False)
    sources: list(str(), required=True)
    maintainers: list(include('maintainer'), required=True)
    dependencies: list(include('dependency'), required=False)
    icon: str(required=False)
    engine: str(required=False)
    condition: str(required=False)
    tags: str(required=False)
    deprecated: bool(required=False)
    kubeVersion: str(required=False)
    annotations: map(str(), str(), required=False)
    ---
    maintainer:
      name: str(required=True)
      email: str(required=False)
      url: str(required=False)
    ---
    dependency:
      name: str()
      version: str()
      repository: str()
      condition: str(required=False)
      tags: list(str(), required=False)
      enabled: bool(required=False)
      import-values: any(list(str()), list(include('import-value')), required=False)
      alias: str(required=False)
  lintconf: |
    ---
    rules:
      braces:
        min-spaces-inside: 0
        max-spaces-inside: 0
        min-spaces-inside-empty: -1
        max-spaces-inside-empty: -1
      brackets:
        min-spaces-inside: 0
        max-spaces-inside: 0
        min-spaces-inside-empty: -1
        max-spaces-inside-empty: -1
      colons:
        max-spaces-before: 0
        max-spaces-after: 1
      commas:
        max-spaces-before: 0
        min-spaces-after: 1
        max-spaces-after: 1
      comments:
        require-starting-space: true
        min-spaces-from-content: 2
      document-end: disable
      document-start: disable           # No --- to start a file
      empty-lines:
        max: 2
        max-start: 0
        max-end: 0
      hyphens:
        max-spaces-after: 1
      indentation:
        spaces: consistent
        indent-sequences: whatever      # - list indentation will handle both indentation and without
        check-multi-line-strings: false
      key-duplicates: enable
      line-length: disable              # Lines can be any length
      new-line-at-end-of-file: enable
      new-lines:
        type: unix
      trailing-spaces: enable
      truthy:
        level: warning

# Deploy EDP Tekton Dashboard along with pipelines library
dashboard:
  # -- Deploy EDP Dashboard as a part of pipeline library when true. Default: true
  enabled: true

  nameOverride: "edp-tekton-dashboard"

  readOnly: true

  image:
    # -- Define tekton dashboard docker image name
    repository: gcr.io/tekton-releases/github.com/tektoncd/dashboard/cmd/dashboard
    # -- Define tekton dashboard docker image tag
    tag: v0.32.0

  ingress:
    # -- Annotations for Ingress resource
    annotations:
      {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    # -- Hostname(s) for the Ingress resource
    # -- Ingress TLS configuration
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local
