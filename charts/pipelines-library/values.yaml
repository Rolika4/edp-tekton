# Default values for edp-tekton.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

nameOverride: ""
fullnameOverride: ""

global:
  # -- a cluster DNS wildcard name
  dnsWildCard: "eks-sandbox.aws.main.edp.projects.epam.com"

# -- Tekton URL. Link to tekton Dashboard
tektonUrl: https://tekton.eks-sandbox.aws.main.edp.projects.epam.com

# Kaniko configuration section
kaniko:
  serviceAccount:
    # -- Specifies whether a service account should be created
    create: false
  # -- AWS IAM role to be used for kaniko pod service account (IRSA). Format: arn:aws:iam::<AWS_ACCOUNT_ID>:role/<AWS_IAM_ROLE_NAME>
  roleArn: arn:aws:iam::093899590031:role/AWSIRSACoreSandboxEdpDeliveryKaniko

gerrit:
  # -- Deploy Gerrit related components. Default: true
  enabled: true
  # -- Gerrit port
  sshPort: 30003

github:
  enabled: false
  # -- The GitHub host, adjust this if you run a GitHub enterprise. Default: github.com
  host: github.com
  webhook:
    # -- Existing secret which holds both GitHub Access and Secret Token, default is github-configuration, which is aligned with codebase-operator
    existingSecret: github.com-config
    secretKeys:
      tokenKey: token
      secretKey: secretString

gitlab:
  enabled: false
  # -- The GitLab host, adjust this if you run a GitLab enterprise. Default: gitlab.com
  host: git.epam.com
  webhook:
    # -- Existing secret which holds both GitLab Access and Secret Token, default is gitlab-configuration, which is aligned with codebase-operator
    existingSecret: gitlab.com-config
    secretKeys:
      # -- Key in existingSecret. Generated on GitLab side in section: (User Settings) or (Project Settings) or (Group Settings) > Access Token
      tokenKey: token
      # -- Key in existingSecret. Generated on Tekton side and populated in GitLab for each Project in section: PROJECT_NAME > Settings > Webhooks > Secret Token
      secretKey: secretString

tekton:
  # Pruner provides auto clean up feature for the Tekton resources
  pruner:
    # -- Specifies whether a cronjob should be created
    create: true
    # -- How often to clean up resources
    schedule: "0 18 * * *"
    # -- Maximum number of resources to keep while deleting removing
    keep: 1
    # -- Supported resources for auto prune are 'taskrun' and 'pipelinerun'
    resources: "pipelinerun,taskrun"

buildTool:
  go:
    cache:
      persistentVolume:
        size: 5Gi
        storageClass: ebs-sc
